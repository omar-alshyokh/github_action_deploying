name: Android Build

on:
  push:
    branches:
      - master  # Change this to the branch you want to trigger the build on (e.g., master)

jobs:
  build:
    name: Build Android App Bundle
    runs-on: macos-latest
    environment: production
    steps:
      - uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "12.x"
          cache: 'gradle'
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.7.10"
          channel: 'stable'
          cache: true
      - name: 📝🔐 Create keystore.properties file & .env
        id: build-android
        env:
          KEYSTORE: ${{ secrets.KEYSTORE_PASS }}
          KEYSTORE_KEY_PASS: ${{ secrets.KEYSTORE_KEY_PASS }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
        run:
          echo "storePassword=$KEYSTORE" >> android/key.properties;
          echo "keyPassword=$KEYSTORE_KEY_PASS" >> android/key.properties;
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> android/key.properties;
          echo "storeFile=keystore.jks" >> android/key.properties;
      #        run: |
      #          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> android/key.properties
      #          echo "keyPassword=${{ secrets.KEYSTORE_KEY_PASSWORD }}" >> android/key.properties
      #          echo "keyAlias=${{ secrets.KEYSTORE_KEY_ALIAS }}" >> android/key.properties
      #          echo "storeFile=keystore.jks" >> android/key.properties

      - name: 🔐 Retrieve base64 keystore and decode it to a file
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android/app/keystore.jks
          chmod +x android/app/keystore.jks
      - name: Verify JKS File
        run: |
          if [ -f "android/app/keystore.jks" ]; then
            echo "JKS file created successfully!"
          else
            echo "Failed to create JKS file!"
            exit 1
          fi

      - name: ssh
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      #      - name: Checkout pop-lib-flutter
      #        uses: actions/checkout@master
      #        with:
      #          repository: urbanminded/pop-lib-flutter
      #          token: ${{ secrets.PAT }}
      #          ref: 0b5f6a01cc0084dd2145a80cb24573a8f56ee427
      #      - name: Check out POP-Flutter-Lib
      #          uses: actions/checkout@2
      #          with:
      #            repository: urbanminded/pop-lib-flutter
      #            ref: 0b5f6a01cc0084dd2145a80cb24573a8f56ee427
      #            token: ${{ github.token }}
      - name: Check Flutter Doctor
        run: flutter doctor -v
      - name: Flutter Clean (Optional)
        run: flutter clean
      - name: Get Flutter Dependencies
        run: flutter pub get
      - name: Setup gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5
      - name: List lib Folder Content
        run: |
          ls -lR lib
      - name: Set up Maven environment variables
        run: |
          echo "export MAVEN_USERNAME=${{ secrets.MAVEN_USERNAME }}" >> $GITHUB_ENV
          echo "export MAVEN_PASSWORD=${{ secrets.MAVEN_PASSWORD }}" >> $GITHUB_ENV

      - name: Build Android APK
        run: flutter build apk --release

      - name: Save Artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-bundle
          path: build/app/outputs/bundle/release/app-release.aab
